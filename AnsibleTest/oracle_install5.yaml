---
 - name: TO install Oracle Database
   hosts: all
   become: yes
   vars:
     mysecret: TanGo#12+1
   tasks:
     - name: Insert host entry in /etc/hosts
       lineinfile:
         path: /etc/hosts
         line: '192.168.8.211 splashfin003-idc888.splashbi.com splashfin003-idc888'
         state: present  # Ensure the line is present in the file
     - name: Restart network service
       service:
         name: network
         state: restarted
     - name: Install oracle-database-preinstall-19c 
       ansible.builtin.yum: 
         name: oracle-database-preinstall-19c
         update_cache: yes
         state: present
     - name: copy install.sh from local to server
       ansible.builtin.copy:
         src: /u01/AnsibleTest/install.sh
         dest: /root
         mode: 0777
     - name: Run install.sh file
       ansible.builtin.shell: source /root/install.sh
     - name: Create oinstall group
       group:
         name: oinstall
         gid: 54321
         state: present
     - name: Create dba group
       group:
         name: dba
         gid: 54322
         state: present
     - name: Create oper group
       group:
         name: oper
         gid: 54323
         state: present
     - name: Create oracle user
       user:
         name: oracle
         uid: 54321
         group: oinstall
         groups: "dba,oper"
         state: present
     - name: Change user password
       user:
         name: oracle
         update_password: always
         password: "{{ newpassword|password_hash('sha512') }}"
     - name: Ensure SELinux is set to enforcing mode
       ansible.builtin.lineinfile:
         path: /etc/selinux/config
         regexp: '^SELINUX='
         line: SELINUX=permissive
     - name: Set SELinux to Permissive
       command: setenforce 0
     - name: Stop firewalld service
       systemd:
         name: firewalld
         state: stopped
     - name: Disable firewalld service
       systemd:
         name: firewalld
         enabled: no
     - name : create a directory for softwares
       ansible.builtin.file:
         path: '{{ item }}'
         state: directory
         owner: oracle
         group: oinstall
         mode: 0775
       loop:
         - /u01/app/oracle/product/19.0.0/dbhome_1
         - /u02/oradata
         - /u01/app/oraInventory     
     - name: download Oracle software from artifactory
       ansible.builtin.get_url:
         url: http://192.168.4.252:8081/artifactory/Software/Linux-software/LINUX.X64_193000_db_home.zip
         dest: /u01/app/oracle/product/19.0.0/dbhome_1
         username: admin
         password: '{{ mysecret }}'
         owner: oracle
         group: oinstall
     - name: unzip Oracle software
       ansible.builtin.unarchive:
         src: /u01/app/oracle/product/19.0.0/dbhome_1/LINUX.X64_193000_db_home.zip
         dest: /u01/app/oracle/product/19.0.0/dbhome_1
         mode: 0775
         owner: oracle
         group: oinstall
         remote_src: yes
     - name: copy the db_install.rsp file from local to oracle server
       ansible.builtin.copy:
         src: /u01/AnsibleTest/oracle_files/db_install.rsp
         dest: /u01/app/oracle/product/19.0.0/dbhome_1/install/response/db_install.rsp
         owner: oracle
         group: oinstall
         mode: 0775
     - name: Run the ./runInstaller file from oracle user
       ansible.builtin.command: "/u01/app/oracle/product/19.0.0/dbhome_1/runInstaller -silent -responseFile /u01/app/oracle/product/19.0.0/dbhome_1/install/response/db_install.rsp"
       become_user: oracle
       args:
         chdir: "/u01/app/oracle/product/19.0.0/dbhome_1"
     - name: Check if the file exists
       stat:
         path: /u01/app/oraInventory/orainstRoot.sh
       register: file_status
     - name: Run the orainstRoot.sh only if the file exists
       command: /u01/app/oraInventory/orainstRoot.sh
       when: file_status.stat.exists
     - name: Run root.sh in Oracle home
       command: /u01/app/oracle/product/19.0.0/dbhome_1/root.sh
     - name: Set ORACLE_HOME in .bash_profile
       ansible.builtin.lineinfile:
         dest: /home/oracle/.bash_profile
         line: '{{ item }}'
         state: present
       loop:
        - export ORACLE_HOME=/u01/app/oracle/product/19.0.0/dbhome_1
        - export ORACLE_BASE=/u01/app/oracle
        - export ORACLE_SID=splashfin003
        - PATH=$PATH:$ORACLE_HOME/bin;
        - export TNS_HOME=/u01/app/oracle/product/19.0.0/dbhome_1/network/admin
     - name: Run .bash_profile
       ansible.builtin.shell: source /home/oracle/.bash_profile
     - name: Run netca command
       command: "/u01/app/oracle/product/19.0.0/dbhome_1/bin/netca -silent -responseFile /u01/app/oracle/product/19.0.0/dbhome_1/assistants/netca/netca.rsp"
       become_user: oracle
       args:
         chdir: "/u01/app/oracle/product/19.0.0/dbhome_1/bin"
     - name: copy the dbca.rsp file from local to oracle server
       ansible.builtin.copy:
         src: /u01/AnsibleTest/oracle_files/dbca.rsp
         dest: /u01/app/oracle/product/19.0.0/dbhome_1/assistants/dbca/dbca.rsp
         owner: oracle
         group: oinstall
         mode: 0775
     - name: Run dbca command
       command: "/u01/app/oracle/product/19.0.0/dbhome_1/bin/dbca -silent -createDatabase -responseFile /u01/app/oracle/product/19.0.0/dbhome_1/assistants/dbca/dbca.rsp"
       become_user: oracle
       args:
         chdir: "/u01/app/oracle/product/19.0.0/dbhome_1/bin"
